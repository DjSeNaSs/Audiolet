var numColumns = 32;
var numRows = 3;
var stepColumn = null;
var stepRow = null;

var rows = new Array();
var currColumn = 0;

function init_canvas() {
  //canvas = document.getElementById("sequence");
  canvas = $('#sequence');
  context = canvas[0].getContext("2d");

  stepColumn = canvas.width() / numColumns;
  stepRow = canvas.height() / numRows;

  resetMatrix(); 
  updateAudioPattern();
}

$(document).ready(function() {
  // get position of sequence canvas:

  $('#sequence').click(function(e) {
    // get click coordinates relative to the canvas:
    var clickedX = e.pageX - $('#sequence').offset().left;
    var clickedY = e.pageY - $('#sequence').offset().top;
    // get matrix indexes:
    var colClicked = Math.floor(clickedX / pixelX(1));
    var rowClicked = Math.floor(clickedY / pixelY(1));
    // apply changes:
    togglePixel(colClicked, rowClicked);
  });
});

function pixelX(n) {
  return stepColumn * n;
}
function pixelY(n) {
  return stepRow * n;
}
function togglePixel(colClicked, rowClicked) {
  var amplitude = (rows[rowClicked][colClicked] + 1) % 3;
  rows[rowClicked][colClicked] = amplitude;
  // update audiolet sequence
  if (rowClicked == 0)
    audioletApp.bdPattern.list[colClicked] = amplitude;
  else if (rowClicked == 1)
    audioletApp.hhPattern.list[colClicked] = amplitude;
  else if (rowClicked == 2)
    audioletApp.snPattern.list[colClicked] = amplitude;
}

function resetMatrix() {
  context.fillStyle = "black";
  for(i=0; i < numRows; i++) {
    rows[i] = new Array();
    for(j=0; j < numColumns; j++) {
      rows[i][j] = 0;
    }
  }
}

function updateAudioPattern() {

  for (i=0; i < numColumns; i++) {
      audioletApp.bdPattern.list[i] = rows[0][i];
  }
  for (i=0; i < numColumns; i++) {
      audioletApp.hhPattern.list[i] = rows[1][i];
  }
  for (i=0; i < numColumns; i++) {
      audioletApp.snPattern.list[i] = rows[2][i];
  }
}

function animate() {
  // draw:
  context.clearRect(0, 0, canvas.width(), canvas.height());
  drawArray(currColumn);
  currColumn = (currColumn + 1) % numColumns;
}

function drawArray(activeColumn) {
   draw all rows
  for(i=0; i < numRows; i++) {
    for(j=0; j < numColumns; j++) {
      if(rows[i][j] == 1) {
        context.fillStyle = "black";
        context.fillRect(pixelX(j), pixelY(i), pixelX(1), pixelY(1));
      }
      else if(rows[i][j] == 2) {
        context.fillStyle = "red";
        context.fillRect(pixelX(j), pixelY(i), pixelX(1), pixelY(1));
      }
    }
  }
  context.fillStyle = "red";
  context.fillRect(pixelX(0), pixelY(0), 20, 20);

  // draw active column
  context.globalAlpha = 0.5;
  context.fillStyle = "white";

  context.fillRect(pixelX(activeColumn), pixelY(0), pixelX(1), pixelY(numRows));

  context.globalAlpha = 1;
}
